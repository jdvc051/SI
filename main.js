/**
</> Original base BochilGaming 
</> Recode simple by @NeKosmic
**/

process.env.NODE_TLS_REJECT_UNAUTHORIZED="0",process.on("uncaughtException",console.error);import e from"chalk";import"./config.js";import n from"./lib/connection.js";import r from"./lib/helper.js";import o from"./lib/database.js";import i from"./lib/clearTmp.js";import{spawn as a}from"child_process";import{protoType as l,serialize as t}from"./lib/simple.js";import{plugins as s,loadPluginFiles as p,reload as c,pluginFolder as m,pluginFilter as g}from"./lib/plugins.js";let PORT=process.env.PORT||process.env.SERVER_PORT||3e3;l(),t(),Object.assign(global,{...r,timestamp:{start:Date.now()}});let conn=Object.defineProperty(n,"conn",{value:await n.conn,enumerable:!0,configurable:!0,writable:!0}).conn;async function _quickTest(){let[e,n,r,o,i,l,t]=await Promise.all([a("ffmpeg"),a("ffprobe"),a("ffmpeg",["-hide_banner","-loglevel","error","-filter_complex","color","-frames:v","1","-f","webp","-"]),a("convert"),a("magick"),a("gm"),a("find",["--version"])].map(e=>Promise.race([new Promise(n=>{e.on("close",e=>{n(127!==e)})}),new Promise(n=>{e.on("error",e=>n(!1))})]))),s=global.support={ffmpeg:e,ffprobe:n,ffmpegWebp:r,convert:o,magick:i,gm:l,find:t};Object.freeze(global.support),s.ffmpeg||(conn?.logger||console).warn("\n\n[ IMPORTANTE ] : Por favor instal\xe9 el paquete ffmpeg para el env\xedo de archivos multimedia\n[_>] (pkg install ffmpeg)\n\n"),s.ffmpeg&&!s.ffmpegWebp&&(conn?.logger||console).warn("\n\n[ IMPORTANTE ] : Es posible que los stickers no est\xe9n animadas sin libwebp en ffmpeg\n[_>] (pkg install libwebp) \xf3 (--enable-ibwebp while compiling ffmpeg)\n\n"),s.convert||s.magick||s.gm||(conn?.logger||console).warn("\n\n[ IMPORTANTE ] : Es posible que los stickers no funcionen sin imagemagick si libwebp y ffmpeg no esten instalados\n[_>] (pkg install imagemagick)\n\n")}p(m,g,{logger:conn.logger,recursiveRead:!1}).then(n=>console.log(e.rgb(255,131,0).underline("\n[...] Se encontraron "+Object.keys(s).length+" plugins\n"))).catch(console.error),global.plugins={},opts.test||setInterval(async()=>{await Promise.allSettled([o.data?o.write():Promise.reject("db.data es nulo"),opts.autocleartmp||opts.cleartmp?i():Promise.resolve()])},6e4),setInterval(async()=>{await i()},18e4),opts.server&&(await import("./server.js")).default(conn,PORT),_quickTest().then(()=>(conn?.logger?.info||console.log)("\n\n[_>] Prueba r\xe1pida realizada âœ“\n")).catch(console.error);

/**
[_>] https://github.com/NeKosmic/
[_>] https://gitlab.com/NeKosmic/
**/