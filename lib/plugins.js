/**
</> Original base BochilGaming 
</> Recode simple by @NeKosmic
**/

import fs,{existsSync,watch}from"fs";import{join,resolve}from"path";import*as os from"os";import syntaxerror from"syntax-error";import importFile from"./import.js";import Helper from"./helper.js";const __dirname=Helper.__dirname(import.meta),rootDirectory=Helper.__dirname(join(__dirname,"../")),pluginFolder=Helper.__dirname(join(__dirname,"../plugins")),pluginFilter=e=>/\.(mc)?js$/.test(e);let watcher={},plugins={},pluginFolders=[];async function loadPluginFiles(e=e,r=r,i={recursiveRead:!1}){const l=resolve(e);if(l in watcher)return;pluginFolders.push(l);const n=await fs.promises.readdir(e);await Promise.all(n.map((async e=>{const n=join(l,e),o=Helper.__filename(n,!0),t=formatFilename(n);try{if(!(await fs.promises.lstat(o)).isFile())return void(i.recursiveRead&&await loadPluginFiles(o,r,i));const e=Helper.__filename(n);if(!r(e))return;const l=await importFile(e);l&&(plugins[t]=l)}catch(e){i.logger?.error(e,`[ ! ] Error al solicitar ${t}`),delete plugins[t]}})));const o=watch(l,reload.bind(null,{logger:i.logger,pluginFolder:e,pluginFilter:r}));return o.on("close",(()=>deletePluginFolder(l,!0))),watcher[l]=o,plugins=sortedPlugins(plugins)}function deletePluginFolder(e,r=!1){const i=resolve(e);i in watcher&&(r||watcher[i].close(),delete watcher[i],pluginFolders.splice(pluginFolders.indexOf(i),1))}async function reload({logger:e,pluginFolder:r=r,pluginFilter:i=i},l,n){if(i(n)){const i=Helper.__filename(join(r,n),!0),l=formatFilename(i);if(l in plugins){if(!existsSync(i))return e?.warn(`[ ! ] Se eliminÃ³ el plugin - '${l}'`),delete plugins[l];e?.info(`[ ! ] Plugin - '${l}' - actualizado correctamente`)}else e?.info(`[ ! ] Plugin nuevo - '${l}'`);const o=await fs.promises.readFile(i);let t=syntaxerror(o,n,{sourceType:"module",allowAwaitOutsideFunction:!0});if(t)e?.error(t,`[ ! ] Error de sintaxis al cargar - '${l}' - `);else try{const e=await importFile(i);e&&(plugins[l]=e)}catch(r){e?.error(r,`[ ! ] Error se necesita el plugin - '${l}' - `),delete plugins[l]}finally{plugins=sortedPlugins(plugins)}}}function formatFilename(e){let r=join(rootDirectory,"./");"win32"===os.platform()&&(r=r.replace(/\\/g,"\\\\"));const i=new RegExp(`^${r}`);return e.replace(i,"")}function sortedPlugins(e){return Object.fromEntries(Object.entries(e).sort((([e],[r])=>e.localeCompare(r))))}export{pluginFolder,pluginFilter,plugins,watcher,pluginFolders,loadPluginFiles,deletePluginFolder,reload};

/**
[_>] https://github.com/NeKosmic/
[_>] https://gitlab.com/NeKosmic/
**/