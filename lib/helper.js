/**
</> Original base BochilGaming 
</> Recode simple by @NeKosmic
**/

import yargs from"yargs";import os from"os";import path from"path";import{fileURLToPath,pathToFileURL}from"url";import{createRequire}from"module";import fs from"fs";import Stream,{Readable}from"stream";const __filename=function(e=import.meta,t="win32"!==os.platform()){const a=e.url||e;return t?/file:\/\/\//.test(a)?fileURLToPath(a):a:/file:\/\/\//.test(a)?a:pathToFileURL(a).href},__dirname=function(e){const t=__filename(e,!0),a=/\/$/;return a.test(t)?t:fs.existsSync(t)&&fs.statSync(t).isDirectory()?t.replace(a,""):path.dirname(t)},__require=function(e=import.meta){const t=e.url||e;return createRequire(t)},checkFileExists=e=>fs.promises.access(e,fs.constants.F_OK).then((()=>!0)).catch((()=>!1)),opts=new Object(yargs(process.argv.slice(2)).exitProcess(!1).parse()),prefix=global.Prefijo,saveStreamToFile=(e,t)=>new Promise(((a,r)=>{const o=e.pipe(fs.createWriteStream(t));o.once("finish",(()=>{a(),o.destroy()})),o.once("error",(()=>{r(),o.destroy()}))})),kDestroyed=Symbol("kDestroyed"),kIsReadable=Symbol("kIsReadable"),isReadableNodeStream=(e,t=!1)=>!(!e||"function"!=typeof e.pipe||"function"!=typeof e.on||t&&("function"!=typeof e.pause||"function"!=typeof e.resume)||e._writableState&&!1===e._readableState?.readable||e._writableState&&!e._readableState),isNodeStream=e=>e&&(e._readableState||e._writableState||"function"==typeof e.write&&"function"==typeof e.on||"function"==typeof e.pipe&&"function"==typeof e.on),isDestroyed=e=>{if(!(t=e)||!(t._readableState||t._writableState||"function"==typeof t.write&&"function"==typeof t.on||"function"==typeof t.pipe&&"function"==typeof t.on))return null;var t;const a=e._writableState,r=e._readableState,o=a||r;return!!(e.destroyed||e[kDestroyed]||o?.destroyed)},isReadableFinished=(e,t)=>{if(!isReadableNodeStream(e))return null;const a=e._readableState;return!a?.errored&&("boolean"!=typeof a?.endEmitted?null:!!(a.endEmitted||!1===t&&!0===a.ended&&0===a.length))},isReadableStream=e=>"function"==typeof Stream.isReadable?Stream.isReadable(e):e&&null!=e[kIsReadable]?e[kIsReadable]:"boolean"!=typeof e?.readable?null:!isDestroyed(e)&&(isReadableNodeStream(e)&&!!e.readable&&!isReadableFinished(e)||e instanceof fs.ReadStream||e instanceof Readable);export default{__filename:__filename,__dirname:__dirname,__require:__require,checkFileExists:checkFileExists,saveStreamToFile:saveStreamToFile,isReadableStream:isReadableStream,opts:opts,prefix:prefix};

/**
[_>] https://github.com/NeKosmic/
[_>] https://gitlab.com/NeKosmic/
**/